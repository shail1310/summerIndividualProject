/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.LabAssistantRole;

import Business.Enterprise.Enterprise;
import Business.FileUtil.FileUploadJPanel;
import Business.Organization.LabOrganization;
import Business.Organization.Organization;
import Business.Organization.PatientOrganization;
import Business.Patient.Patient;
import Business.UserAccount.EmployeeAccount;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Shail
 */
public class LabEmployeeWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel upc;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private LabOrganization labOrganization;
    private PatientOrganization patientOrganization;
    
    /**
     * Creates new form LabAssistantWorkAreaJPanel
     * @param userProcessContainer
     * @param userAccount
     * @param ptientOrganization
     * @param enterprise
     */
    public LabEmployeeWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, LabOrganization organization, 
            Enterprise enterprise) {
        initComponents();
        
        this.upc = userProcessContainer;
        this.userAccount = account;
        this.labOrganization = organization;
        this.enterprise = enterprise;
        this.patientOrganization = (PatientOrganization)enterprise.getOrganizationDirectory().searchOrganization(Organization.Type.Patient);
        
        populateTable();
    }
    
    private void populateTable(){
        DefaultTableModel model = (DefaultTableModel)labRequestTbl.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : labOrganization.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[5];
            
            LabTestWorkRequest deleteBtn = (LabTestWorkRequest)request;
            
            EmployeeAccount senderAccount = (EmployeeAccount)(deleteBtn.getSender());
            
            row[0] = deleteBtn.getPatient();
            row[1] = deleteBtn;
            row[2] = senderAccount.getEmployee().getEmpName();
            
            if(deleteBtn.getReceiver() != null){
                EmployeeAccount receiverAccount = (EmployeeAccount)deleteBtn.getReceiver();
                row[3] = receiverAccount.getEmployee().getEmpName();
            }
            else{
                row[3] = "";
            }
            
            row[4] = request.getStatus();
            
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        labRequestTbl = new javax.swing.JTable();
        assignBtn = new javax.swing.JButton();
        processBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(33, 33, 33));
        setLayout(null);

        labRequestTbl.setBackground(new java.awt.Color(51, 51, 51));
        labRequestTbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        labRequestTbl.setForeground(new java.awt.Color(255, 255, 255));
        labRequestTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Test Name", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(labRequestTbl);

        add(jScrollPane1);
        jScrollPane1.setBounds(60, 113, 539, 96);

        assignBtn.setBackground(new java.awt.Color(51, 51, 51));
        assignBtn.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        assignBtn.setForeground(new java.awt.Color(255, 255, 255));
        assignBtn.setText("Assign to me");
        assignBtn.setBorder(null);
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });
        add(assignBtn);
        assignBtn.setBounds(326, 302, 273, 42);

        processBtn.setBackground(new java.awt.Color(51, 51, 51));
        processBtn.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        processBtn.setForeground(new java.awt.Color(255, 255, 255));
        processBtn.setText("Proceed Lab Results");
        processBtn.setBorder(null);
        processBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processBtnActionPerformed(evt);
            }
        });
        add(processBtn);
        processBtn.setBounds(60, 302, 192, 42);

        refreshBtn.setBackground(new java.awt.Color(51, 51, 51));
        refreshBtn.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        refreshBtn.setForeground(new java.awt.Color(255, 255, 255));
        refreshBtn.setText("Refresh");
        refreshBtn.setBorder(null);
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });
        add(refreshBtn);
        refreshBtn.setBounds(60, 227, 97, 42);

        deleteBtn.setBackground(new java.awt.Color(51, 51, 51));
        deleteBtn.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteBtn.setText("Delete");
        deleteBtn.setBorder(null);
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        add(deleteBtn);
        deleteBtn.setBounds(326, 227, 273, 42);

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("LAB ASSISTANT WORK AREA");
        add(jLabel1);
        jLabel1.setBounds(251, 13, 501, 49);

        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\shail\\OneDrive\\Desktop\\finalProject indivifual\\LAB.png")); // NOI18N
        add(jLabel3);
        jLabel3.setBounds(750, 70, 420, 480);

        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\shail\\OneDrive\\Desktop\\finalProject indivifual\\LAB2.png")); // NOI18N
        jLabel4.setText("jLabel4");
        add(jLabel4);
        jLabel4.setBounds(370, 180, 470, 490);

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\shail\\OneDrive\\Desktop\\finalProject indivifual\\GRAD L.jpg")); // NOI18N
        jLabel2.setText("jLabel2");
        add(jLabel2);
        jLabel2.setBounds(0, 0, 1170, 670);
    }// </editor-fold>//GEN-END:initComponents

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed

        int selectedRow = labRequestTbl.getSelectedRow();
        
        if (selectedRow < 0){
            return;
        }
        
        WorkRequest request = (WorkRequest)labRequestTbl.getValueAt(selectedRow, 1);
        request.setReceiver(userAccount);
        request.setStatus("Lab Results Pending");
        populateTable();
        JOptionPane.showMessageDialog(null, "Lab Results Assigned");
    }//GEN-LAST:event_assignBtnActionPerformed

    private void processBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processBtnActionPerformed
        
        int selectedRow = labRequestTbl.getSelectedRow();
        
        if (selectedRow < 0){
            return;
        }
        
        LabTestWorkRequest request = (LabTestWorkRequest)labRequestTbl.getValueAt(selectedRow, 1);
        Patient patient = (Patient)labRequestTbl.getValueAt(selectedRow, 0);
        
        request.setStatus("Completed");
        
        String pattern = "dd-MMM-yyyy";
        String currentDate =new SimpleDateFormat(pattern).format(new Date());
        
        request.setResult(patient.getPatientId() + request.getTestName() + currentDate + ".pdf");
     
        FileUploadJPanel processWorkRequestJPanel = new FileUploadJPanel(upc, 
                patient, "Tests", currentDate, request.getTestName());
        upc.add("processWorkRequestJPanel", processWorkRequestJPanel);
        CardLayout layout = (CardLayout) upc.getLayout();
        layout.next(upc);
        
    }//GEN-LAST:event_processBtnActionPerformed

     private String getCurrentTimestamp() {
        Calendar calender = Calendar.getInstance();
        Date date = calender.getTime();
        Timestamp timestamp = new Timestamp(date.getTime());
        return timestamp.toString();
    }
    
    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        int row = labRequestTbl.getSelectedRow();

        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }

        LabTestWorkRequest labRequest = (LabTestWorkRequest)labRequestTbl.getValueAt(row, 1);

        labOrganization.getWorkQueue().getWorkRequestList().remove(labRequest);
        JOptionPane.showMessageDialog(null, "Request Deleted");
    }//GEN-LAST:event_deleteBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable labRequestTbl;
    private javax.swing.JButton processBtn;
    private javax.swing.JButton refreshBtn;
    // End of variables declaration//GEN-END:variables
}
