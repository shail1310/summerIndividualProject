/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorRole;

import Business.Patient.Patient;
import Business.Patient.VitalSign;
import Business.Patient.VitalSignHistory;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.util.SortOrder;

/**
 *
 * @author nikhil
 */
public class ViewVitalSignJPanel extends javax.swing.JPanel {

    private VitalSignHistory vitalSignHistory;
    private Patient patient;
    private JPanel userProcContainer;
    private UserAccount ua;

    public ViewVitalSignJPanel(JPanel userProcContainer,
            UserAccount ua ,Patient patient) {
        initComponents();
        this.userProcContainer = userProcContainer;
        this.patient = patient;
        this.vitalSignHistory = patient.getVsh();
        this.ua = ua;
        populateTable();
    }

    private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) vitalSignJTable.getModel();

        // If it is already having something.... Flush it
        int totalRows = dtm.getRowCount();
        for (int i = (totalRows - 1); i >= 0; i--) {
            dtm.removeRow(i);
        }

        // Insert Objects
        for (VitalSign vs : this.vitalSignHistory.getVsList()) {
            Object row[] = new Object[2];

            row[0] = vs;
            row[1] = vs.getVitalSignStatus();
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        vitalSignJTable = new javax.swing.JTable();
        viewVSJLabel = new javax.swing.JLabel();
        viewJButton = new javax.swing.JButton();
        deleteJButton = new javax.swing.JButton();
        addVitalSignJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        viewGraphJButton = new javax.swing.JButton();
        nextJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(33, 33, 33));
        setForeground(java.awt.Color.white);
        setPreferredSize(new java.awt.Dimension(500, 500));

        jScrollPane1.setForeground(java.awt.Color.white);

        vitalSignJTable.setForeground(java.awt.Color.white);
        vitalSignJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Timestamp", "Vital Sign State"
            }
        ));
        jScrollPane1.setViewportView(vitalSignJTable);

        viewVSJLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        viewVSJLabel.setForeground(java.awt.Color.white);
        viewVSJLabel.setText("Vital Sign History");

        viewJButton.setBackground(new java.awt.Color(51, 171, 159));
        viewJButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        viewJButton.setForeground(java.awt.Color.black);
        viewJButton.setText("View");
        viewJButton.setBorder(null);
        viewJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewJButtonActionPerformed(evt);
            }
        });

        deleteJButton.setBackground(new java.awt.Color(211, 47, 47));
        deleteJButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        deleteJButton.setForeground(java.awt.Color.black);
        deleteJButton.setText("Delete");
        deleteJButton.setBorder(null);
        deleteJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteJButtonActionPerformed(evt);
            }
        });

        addVitalSignJButton.setBackground(new java.awt.Color(0, 105, 95));
        addVitalSignJButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        addVitalSignJButton.setForeground(java.awt.Color.white);
        addVitalSignJButton.setText("Add");
        addVitalSignJButton.setBorder(null);
        addVitalSignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVitalSignJButtonActionPerformed(evt);
            }
        });

        refreshJButton.setBackground(new java.awt.Color(51, 171, 159));
        refreshJButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        refreshJButton.setForeground(java.awt.Color.black);
        refreshJButton.setText("Refresh");
        refreshJButton.setBorder(null);
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        backJButton.setBackground(new java.awt.Color(255, 167, 51));
        backJButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        backJButton.setForeground(java.awt.Color.black);
        backJButton.setText("Back");
        backJButton.setBorder(null);
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        viewGraphJButton.setBackground(new java.awt.Color(0, 105, 95));
        viewGraphJButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        viewGraphJButton.setForeground(java.awt.Color.white);
        viewGraphJButton.setText("View Graph");
        viewGraphJButton.setBorder(null);
        viewGraphJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewGraphJButtonActionPerformed(evt);
            }
        });

        nextJButton.setBackground(java.awt.Color.white);
        nextJButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        nextJButton.setForeground(java.awt.Color.black);
        nextJButton.setText("Next");
        nextJButton.setBorder(null);
        nextJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(backJButton, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                                    .addComponent(addVitalSignJButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(viewJButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(103, 103, 103)
                                        .addComponent(deleteJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(viewGraphJButton, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                            .addComponent(refreshJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(nextJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(viewVSJLabel)))
                .addGap(60, 60, 60))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(viewVSJLabel)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addVitalSignJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewGraphJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nextJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewJButtonActionPerformed
        int selectedRow = vitalSignJTable.getSelectedRow();

        if (selectedRow >= 0) {
            VitalSign vitalSign = (VitalSign) vitalSignJTable.getValueAt(selectedRow, 0);

            UpdateVitalSignJPanel updateVitalSign = new UpdateVitalSignJPanel(
                    userProcContainer, vitalSign, patient.getAge());

            userProcContainer.add("UpdateVitalSignJPanel", updateVitalSign);
            CardLayout layoout = (CardLayout) userProcContainer.getLayout();
            layoout.next(userProcContainer);

        } else {
            JOptionPane.showMessageDialog(null, "Please select vital sign");
        }
    }//GEN-LAST:event_viewJButtonActionPerformed

    private void deleteJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteJButtonActionPerformed
        int selectedRow = vitalSignJTable.getSelectedRow();

        if (selectedRow >= 0) {
            VitalSign vitalSign = (VitalSign) vitalSignJTable.getValueAt(selectedRow, 0);

            int result = JOptionPane.showConfirmDialog(null, "Are you sure you want to delet VitalSign ?", "Warning", JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.YES_OPTION) {
                vitalSignHistory.removeVitalSign(vitalSign);
                populateTable();
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please select vital sign");
        }
    }//GEN-LAST:event_deleteJButtonActionPerformed

    private void addVitalSignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVitalSignJButtonActionPerformed
        RecordVitalSignJPanel recordVitalSign = new RecordVitalSignJPanel(
                userProcContainer, vitalSignHistory, patient.getAge());

        userProcContainer.add("RecordVitalSignJPanel", recordVitalSign);
        CardLayout layout = (CardLayout) userProcContainer.getLayout();
        layout.next(userProcContainer);
    }//GEN-LAST:event_addVitalSignJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcContainer.remove(this);

        CardLayout layout = (CardLayout) userProcContainer.getLayout();
        layout.previous(userProcContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void viewGraphJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewGraphJButtonActionPerformed

        CategoryDataset data = createDataset();
        JFreeChart chart = createChart(data);
        ChartFrame chartFrame = new ChartFrame("Sales Performance", chart);
        chartFrame.setVisible(true);
        chartFrame.setSize(500, 500);
    }//GEN-LAST:event_viewGraphJButtonActionPerformed

    private void nextJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextJButtonActionPerformed
        CardLayout layout = (CardLayout) userProcContainer.getLayout();
        userProcContainer.add("ViewPatientDiagnosisHistory", new ViewPatientDiagnosisHistory(userProcContainer, ua, patient));
        layout.next(userProcContainer);
    }//GEN-LAST:event_nextJButtonActionPerformed

    private CategoryDataset createDataset() {

        DefaultCategoryDataset vitalSignDataset = new DefaultCategoryDataset();

        for (VitalSign vs : vitalSignHistory.getVsList()) {

            String timestamp = vs.getTimestamp();
            vitalSignDataset.addValue(vs.getRespRate(), RESP_RATE, timestamp);
            vitalSignDataset.addValue(vs.getHeartRate(), HERAT_RATE, timestamp);
            vitalSignDataset.addValue(vs.getBloodPressure(), SYST_BL_PRESSURE, timestamp);
            vitalSignDataset.addValue(vs.getWieghtInPounds(), WEIGHT, timestamp);
        }
        return vitalSignDataset;
    }

    private static JFreeChart createChart(CategoryDataset categorydataset) {
        JFreeChart jfreechart = ChartFactory.createBarChart(TITLE,
                CAT_AXIS_LABEL, CAT_AXIS_VALUE, categorydataset,
                PlotOrientation.HORIZONTAL, true, true, false);
        CategoryPlot categoryplot = (CategoryPlot) jfreechart.getPlot();

        categoryplot.setDomainGridlinesVisible(true);
        categoryplot.setRangePannable(true);
        categoryplot.setRangeZeroBaselineVisible(true);
        categoryplot.configureRangeAxes();

        NumberAxis numberaxis = (NumberAxis) categoryplot.getRangeAxis();
        numberaxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
        LayeredBarRenderer layeredbarrenderer = new LayeredBarRenderer();
        layeredbarrenderer.setDrawBarOutline(false);
        categoryplot.setRenderer(layeredbarrenderer);
        categoryplot.setRowRenderingOrder(SortOrder.DESCENDING);

        return jfreechart;
    }

    // Constants
    public static String RESP_RATE = "Respiratory Rate";
    public static String HERAT_RATE = "Heart Rate";
    public static String SYST_BL_PRESSURE = "Systolic Blood Pressure";
    public static String WEIGHT = "Weight in Pounds";
    public static String TITLE = "Overview of Vital Signs of Patient";
    public static String CAT_AXIS_LABEL = "Vital Signs samples at different timestamps";
    public static String CAT_AXIS_VALUE = "Vital Sign Values";

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addVitalSignJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton deleteJButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nextJButton;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton viewGraphJButton;
    private javax.swing.JButton viewJButton;
    private javax.swing.JLabel viewVSJLabel;
    private javax.swing.JTable vitalSignJTable;
    // End of variables declaration//GEN-END:variables

}
